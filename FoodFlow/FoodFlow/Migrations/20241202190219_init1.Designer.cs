// <auto-generated />
using System;
using FoodFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodFlow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241202190219_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodFlow.Models.Account", b =>
                {
                    b.Property<int>("Account_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Account_ID"));

                    b.Property<string>("Account_Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Account_Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Account_ID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FoodFlow.Models.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_ID"));

                    b.Property<int?>("Account_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Employee_DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Employee_Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Employee_Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Account_ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("FoodFlow.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<int>("Account_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("User_ID");

                    b.HasIndex("Account_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodFlow.Models.Employee", b =>
                {
                    b.HasOne("FoodFlow.Models.Account", null)
                        .WithMany("Employee")
                        .HasForeignKey("Account_ID");
                });

            modelBuilder.Entity("FoodFlow.Models.User", b =>
                {
                    b.HasOne("FoodFlow.Models.Account", "Account")
                        .WithMany("Users")
                        .HasForeignKey("Account_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FoodFlow.Models.Account", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
